"use strict";function _defineProperty(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}$(document).ready(function(){$(".linkA-1").first().addClass("current"),$(".content-tabs.linkA-1 .content ").find(".data-d").each(function(e){$(this).animateCSS("fadeInUp-p",100*e)}),$("#links__content li").click(function(){$(this).each(function(){$(this).index()})})}),function(n){n.fn.animateCSS=function(t,i,a){return this.each(function(){var e=n(this);i&&"function"!=typeof i||(a=i,i=0);setTimeout(function(){e.addClass("animated "+t),"hidden"==e.css("visibility")&&e.css({visibility:"visible"}),e.is(":hidden")&&e.show(),e.bind("webkitAnimationEnd animationend oAnimationEnd",function(){"function"==typeof a&&a.call(this)})},i)})}}(jQuery);for(var links_b=document.getElementById("links__blogc"),link_b=links_b.getElementsByTagName("li"),i=0;i<link_b.length;i++)link_b[i].addEventListener("click",function(e){e.preventDefault();var t=document.getElementsByClassName("b-link");t[0].className=t[0].className.replace(" b-link",""),this.className+=" b-link"});var $el_dev,topPos_dev,newHeight_dev,$mainNavActive_dev=$(".tabs-ul-dev");$mainNavActive_dev.append("<li id='magic_line_active-dev'></li>");var $magicLineActive_dev=$("#magic_line_active-dev");function c(e){console.log(e)}$magicLineActive_dev.height($(".current_page_item-dev").height()).css("top",0).data("origTop",$magicLineActive_dev.position().top).data("origHeight",$magicLineActive_dev.height()),$(".current_page_item-dev").click(function(e){$el_dev=$(this),topPos_dev=$el_dev.position().top,newHeight_dev=$el_dev.height(),$magicLineActive_dev.stop().animate({top:topPos_dev,height:newHeight_dev})}),function($){$.fn.enllax=function(e){var u=$(window).height(),m=$(document).height(),v=$.extend({ratio:0,type:"background",direction:"vertical"},e);$("[data-enllax-ratio]").each(function(){var t,i,a,n=$(this),s=n.offset().top,o=n.outerHeight(),e=n.data("enllax-ratio"),r=n.data("enllax-type"),l=n.data("enllax-direction");t=e||v.ratio,i=r||v.type,a=l||v.direction;var c=Math.round(s*t),d=Math.round((s-u/2+o)*t);"background"==i?"vertical"==a?n.css({"background-position":"center "+-c+"px"}):"horizontal"==a&&n.css({"background-position":-c+"px center"}):"foreground"==i&&("vertical"==a?n.css({"-webkit-transform":"translateY("+d+"px)","-moz-transform":"translateY("+d+"px)",transform:"translateY("+d+"px)"}):"horizontal"==a&&n.css({"-webkit-transform":"translateX("+d+"px)","-moz-transform":"translateX("+d+"px)",transform:"translateX("+d+"px)"})),$(window).on("scroll",function(){var e=$(this).scrollTop();c=Math.round((s-e)*t),d=Math.round((s-u/2+o-e)*t),"background"==i?"vertical"==a?n.css({"background-position":"center "+-c+"px"}):"horizontal"==a&&n.css({"background-position":-c+"px center"}):"foreground"==i&&e<m&&("vertical"==a?n.css({"-webkit-transform":"translateY("+d+"px)","-moz-transform":"translateY("+d+"px)",transform:"translateY("+d+"px)"}):"horizontal"==a&&n.css({"-webkit-transform":"translateX("+d+"px)","-moz-transform":"translateX("+d+"px)",transform:"translateX("+d+"px)"}))})})}}(jQuery),$(".universal-link").click(function(e){e.preventDefault(),$(this).siblings("li").removeClass("active-line"),$(this).addClass("active-line")});var $this=$(void 0);$("html").easeScroll();var fixOwl=function(){var e=$(".owl-stage"),t=e.width(),i=$(".owl-item"),a=0;i.each(function(){a+=$(this).width()+ +$(this).css("margin-right").slice(0,-2)}),t<a&&e.width(a)};$(function(){var e,i=$(".owl-carousel").owlCarousel((_defineProperty(e={loop:!1,margin:10,items:4,autoplay:!1,autoplayHoverPause:!0},"margin",20),_defineProperty(e,"responsiveClass",!0),_defineProperty(e,"nav",!1),_defineProperty(e,"doit",!0),_defineProperty(e,"responsive",{0:{items:1},600:{items:3},1000:{items:4}}),e));if($(window).width()<1299)i=$("#links__content").owlCarousel({loop:!1,autoplay:!1,autoplayHoverPause:!0,responsiveClass:!0,dots:!1,responsive:{0:{items:1},480:{items:2,dots:!0},600:{items:2,dots:!0},890:{items:3},1000:{items:3},1024:{items:4},1300:{items:5}}});var a=function(e){$(this).addClass("__loading").delay(70*$(this).parent().index()).queue(function(){$(this).dequeue().removeClass("__loading")})};$(".btn-filter").click(function(e){var t=$(this).data("filter");$(this).siblings().removeClass("btn-active"),$(this).addClass("btn-active"),i.owlFilter(t,function(e){$(e).find(".item").each(a)})})}),$(".nav-mobile").click(function(){$(this).toggleClass("open")}),$.fn.owlRemoveItem=function(i){var e=$(this).data("owlCarousel");e._items=$.map(e._items,function(e,t){if(t!=i)return e}),$(this).find(".owl-item").eq(i).remove()},$.fn.owlFilter=function(e,t){var i=this,a=($(i).data("owlCarousel"),$("<div>").css("display","none"));switch(void 0===$(i).data("owl-clone")?($(i).find(".owl-item:not(.cloned)").clone().appendTo(a),$(i).data("owl-clone",a)):a=$(i).data("owl-clone"),i.trigger("replace.owl.carousel",["<div/>"]),e){case"*":a.children().each(function(){i.trigger("add.owl.carousel",[$(this).clone()])});break;default:a.find(e).each(function(){i.trigger("add.owl.carousel",[$(this).parent().clone()])})}i.owlRemoveItem(0),i.trigger("refresh.owl.carousel").trigger("to.owl.carousel",[0]),t&&t.call(this,i)},$(function(){$(".grid").mixItUp({selectors:{target:".grid-item"},layout:{display:"flex"},loadmore:{initial:8,loadMore:2,buttonWrapper:".loadmore",buttonClass:"loadmore-button",buttonLabel:"Load more",lessClass:"loadmore-less",lessLabel:"Reset"}})}),jQuery(document).ready(function(n){var s=n(".cd-auto-hide-header"),o=n(".cd-secondary-nav"),r=n(".sub-nav-hero"),e=n("#logoPNG"),l=(s.height(),!1),c=0,d=10,u=150;function t(){var e,t,i,a=n(window).scrollTop();0<r.length?(t=a,i=r.offset().top-o.height()-s.height(),t<=c?t<i?(s.removeClass("is-hidden"),o.removeClass("fixed slide-up"),r.removeClass("secondary-nav-fixed")):d<c-t&&(s.removeClass("is-hidden"),o.removeClass("slide-up").addClass("fixed"),r.addClass("secondary-nav-fixed")):i+u<t?(s.addClass("is-hidden"),o.addClass("fixed slide-up"),r.addClass("secondary-nav-fixed")):i<t&&(s.removeClass("is-hidden"),o.addClass("fixed").removeClass("slide-up"),r.addClass("secondary-nav-fixed"))):d<c-(e=a)?s.removeClass("is-hidden"):d<e-c&&u<e&&s.addClass("is-hidden"),c=a,l=!1}s.on("click",".nav-trigger",function(e){e.preventDefault(),s.toggleClass("nav-open")}),n(window).on("scroll",function(){700<n(window).scrollTop()?(s.addClass("text-change"),e.attr("src","img/Logo-Prisma-Oscuro.png")):(s.removeClass("text-change"),e.attr("src","img/Logo-Prisma-Blanco.png")),l||(l=!0,window.requestAnimationFrame?requestAnimationFrame(t):setTimeout(t,250))}),n(window).on("resize",function(){s.height()})});var links_p=document.getElementById("links__porfolio"),link_p=links_p.getElementsByTagName("li");for(i=0;i<link_p.length;i++)link_p[i].addEventListener("click",function(e){e.preventDefault();var t=document.getElementsByClassName("p_link");t[0].className=t[0].className.replace(" p_link",""),this.className+=" p_link"});var $el_seo,topPos_seo,newHeight_seo,$mainNavActive_seo=$(".tabs-ul-seo");$mainNavActive_seo.append("<li id='magic_line_active-seo'></li>");var $magicLineActive_seo=$("#magic_line_active-seo");$magicLineActive_seo.height($(".current_page_item-seo").height()).css("top",0).data("origTop",$magicLineActive_seo.position().top).data("origHeight",$magicLineActive_seo.height()),$(".current_page_item-seo").click(function(e){$el_seo=$(this),topPos_seo=$el_seo.position().top,newHeight_seo=$el_seo.height(),$magicLineActive_seo.stop().animate({top:topPos_seo,height:newHeight_seo})});var $slider=$(".slider"),$slickTrack=$(".slick-track"),$slickCurrent=$(".slick-current"),slideDuration=900;$slider.on("init",function(e){TweenMax.to($(".slick-track"),.9,{marginLeft:0}),TweenMax.to($(".slick-active"),.9,{x:0,zIndex:2})}),$slider.on("beforeChange",function(e,t,i,a){TweenMax.to($(".slick-track"),.9,{marginLeft:0}),TweenMax.to($(".slick-active"),.9,{x:0})}),$slider.on("afterChange",function(e,t,i){TweenMax.to($(".slick-track"),.9,{marginLeft:0}),$(".slick-slide").css("z-index","1"),TweenMax.to($(".slick-active"),.9,{x:0,zIndex:2})}),$slider.slick({speed:slideDuration,dots:!0,waitForAnimate:!0,useTransform:!0,cssEase:"cubic-bezier(0.455, 0.030, 0.130, 1.000)"}),$(".slick-prev").on("mouseenter",function(){TweenMax.to($(".slick-track"),.6,{marginLeft:"180px",ease:Quad.easeOut}),TweenMax.to($(".slick-current"),.6,{x:-100,ease:Quad.easeOut})}),$(".slick-prev").on("mouseleave",function(){TweenMax.to($(".slick-track"),.4,{marginLeft:0,ease:Sine.easeInOut}),TweenMax.to($(".slick-current"),.4,{x:0,ease:Sine.easeInOut})}),$(".slick-next").on("mouseenter",function(){TweenMax.to($(".slick-track"),.6,{marginLeft:"-180px",ease:Quad.easeOut}),TweenMax.to($(".slick-current"),.6,{x:100,ease:Quad.easeOut})}),$(".slick-next").on("mouseleave",function(){TweenMax.to($(".slick-track"),.4,{marginLeft:0,ease:Quad.easeInOut}),TweenMax.to($(".slick-current"),.4,{x:0,ease:Quad.easeInOut})}),$(".nav-link li").on("click",function(e){e.preventDefault();var t=$(this).attr("data-scroll"),i=$('section[data-anchor="'+t+'"]').offset().top-28;return $("body,html").animate({scrollTop:i},500,function(){$(".nav").removeClass("is-hidden")}),!1}),$(window).scroll(function(){var t=$(window).scrollTop();$(".page-section").each(function(e){$(this).position().top<=t&&($(".navigation a.active").removeClass("active"),$(".navigation a").eq(e).addClass("active"))})}).scroll(),$(function(){$(this).attr("data-tab")}),$("ul.tabs-primary li").click(function(){var e=$(this).attr("data-tab");$("ul.tabs-primary li").removeClass("current"),$(".tabs-two").removeClass("current"),$(this).addClass("current"),$("#"+e).addClass("current"),$(".tabs-two ul li").removeClass("fadeInUp-p"),$(".tabs-two.current ul").find(".data-d").each(function(e){$(this).animateCSS("fadeInUp-p",100*e)})}),$(".design").click(),$(".tabs-two.current ul.tabs-ul li").click(function(){var e=$(this).attr("data-tabCotent");$(".tabs-two.current ul.tabs-ul li").removeClass("current"),$(".tabs-two.current .content-tabs").removeClass("current"),$(this).addClass("current"),$("#"+e).addClass("current"),$(".content-tabs .content").find(".data-d").removeClass("fadeInUp-p"),$(".content-tabs.current .content").find(".data-d").each(function(e){$(this).animateCSS("fadeInUp-p",100*e)})}),$("ul.tabs-ul-dev li").click(function(){var e=$(this).attr("data-tabCotentdev");c(e),$("ul.tabs-ul-dev li").removeClass("current"),$(".tabs-two.current .content-tabs").removeClass("current"),$(this).addClass("current"),$("#"+e).addClass("current"),$(".content-tabs .content").find(".data-d").removeClass("fadeInUp-p"),$(".content-tabs.current .content").find(".data-d").each(function(e){$(this).animateCSS("fadeInUp-p",100*e)})});var links=document.getElementById("links__content"),link=links.getElementsByTagName("li");for(i=0;i<link.length;i++)link[i].addEventListener("click",function(e){e.preventDefault();var t=document.getElementsByClassName("active-links");t[0].className=t[0].className.replace(" active-links",""),this.className+=" active-links"});var $el,topPos,newHeight,$mainNavActive=$(".tabs-ul");$mainNavActive.append("<li id='magic_line_active'></li>");var $magicLineActive=$("#magic_line_active");$magicLineActive.height($(".current_page_item").height()).css("top",0).data("origTop",$magicLineActive.position().top).data("origHeight",$magicLineActive.height()),$(".current_page_item").click(function(e){$el=$(this),topPos=$el.position().top,newHeight=$el.height(),$magicLineActive.stop().animate({top:topPos,height:newHeight})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
